This is pdfTeX, Version 3.141592653-2.6-1.40.24 (TeX Live 2022) (preloaded format=pdflatex 2023.2.28)  20 MAY 2024 19:56
entering extended mode
 \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**c:/Users/user/Desktop/eBook/source/C1
(c:/Users/user/Desktop/eBook/source/C1.tex
LaTeX2e <2022-11-01> patch level 1
L3 programming layer <2023-02-22>
c:/Users/user/Desktop/eBook/source/C1.tex:2: Undefined control sequence.
l.2 \subsection
               {\hll{Auto-resizing equation}}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

c:/Users/user/Desktop/eBook/source/C1.tex:2: Undefined control sequence.
l.2 \subsection{\hll
                    {Auto-resizing equation}}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


c:/Users/user/Desktop/eBook/source/C1.tex:2: LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.2 \subsection{\hll{A
                      uto-resizing equation}}
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

Missing character: There is no A in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no o in font nullfont!
Missing character: There is no - in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no z in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no n in font nullfont!
Missing character: There is no g in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no q in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no o in font nullfont!
Missing character: There is no n in font nullfont!
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 3.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 3.
c:/Users/user/Desktop/eBook/source/C1.tex:5: Undefined control sequence.
l.5 \enum
         {
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

c:/Users/user/Desktop/eBook/source/C1.tex:6: Undefined control sequence.
l.6 \resizebox
              {.6\textwidth}{!}{$\dot{\rho}=
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

Missing character: There is no . in font nullfont!
Missing character: There is no 6 in font nullfont!
c:/Users/user/Desktop/eBook/source/C1.tex:6: Missing number, treated as zero.
<to be read again> 
                   }
l.6 \resizebox{.6\textwidth}
                            {!}{$\dot{\rho}=
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

c:/Users/user/Desktop/eBook/source/C1.tex:6: Illegal unit of measure (pt inserted).
<to be read again> 
                   }
l.6 \resizebox{.6\textwidth}
                            {!}{$\dot{\rho}=
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

Missing character: There is no ! in font nullfont!
c:/Users/user/Desktop/eBook/source/C1.tex:7: Undefined control sequence.
l.7 \dfrac
          {x^3}{45a^9-23b}$}}{\thesubsection}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

c:/Users/user/Desktop/eBook/source/C1.tex:7: Undefined control sequence.
l.7 \dfrac{x^3}{45a^9-23b}$}}{\thesubsection
                                            }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


c:/Users/user/Desktop/eBook/source/C1.tex:11: LaTeX Error: Environment lstlisting undefined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.11 \begin{lstlisting}
                       [numberstyle=\zebra{black!5}{blue!15},numbers=left,ba...
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

Missing character: There is no [ in font nullfont!
Missing character: There is no n in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no m in font nullfont!
Missing character: There is no b in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no y in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no = in font nullfont!
c:/Users/user/Desktop/eBook/source/C1.tex:11: Undefined control sequence.
l.11 \begin{lstlisting}[numberstyle=\zebra
                                          {black!5}{blue!15},numbers=left,ba...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

Missing character: There is no b in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no c in font nullfont!
Missing character: There is no k in font nullfont!
Missing character: There is no ! in font nullfont!
Missing character: There is no 5 in font nullfont!
Missing character: There is no b in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no ! in font nullfont!
Missing character: There is no 1 in font nullfont!
Missing character: There is no 5 in font nullfont!
Missing character: There is no , in font nullfont!
Missing character: There is no n in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no m in font nullfont!
Missing character: There is no b in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no = in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no f in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no , in font nullfont!
Missing character: There is no b in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no c in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no y in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no = in font nullfont!
c:/Users/user/Desktop/eBook/source/C1.tex:11: Undefined control sequence.
l.11 ...ers=left,basicstyle=\ttfamily\footnotesize
                                                  ]
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2022/07/02 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2022/07/02 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip48
\belowcaptionskip=\skip49
\bibindent=\dimen140
) (c:/texlive/2022/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2022/04/08 v2.17n AMS math features
\@mathmargin=\skip50

For additional information on amsmath, use the `?' option.
(c:/texlive/2022/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2021/08/26 v2.01 AMS text
 (c:/texlive/2022/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks16
\ex@=\dimen141
)) (c:/texlive/2022/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen142
) (c:/texlive/2022/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2022/04/08 v2.04 operator names
)
\inf@bad=\count193
LaTeX Info: Redefining \frac on input line 234.
\uproot@=\count194
\leftroot@=\count195
LaTeX Info: Redefining \overline on input line 399.
LaTeX Info: Redefining \colon on input line 410.
\classnum@=\count196
\DOTSCASE@=\count197
LaTeX Info: Redefining \ldots on input line 496.
LaTeX Info: Redefining \dots on input line 499.
LaTeX Info: Redefining \cdots on input line 620.
\Mathstrutbox@=\box51
\strutbox@=\box52
LaTeX Info: Redefining \big on input line 722.
LaTeX Info: Redefining \Big on input line 723.
LaTeX Info: Redefining \bigg on input line 724.
LaTeX Info: Redefining \Bigg on input line 725.
\big@size=\dimen143
LaTeX Font Info:    Redeclaring font encoding OML on input line 743.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 744.
\macc@depth=\count198
LaTeX Info: Redefining \bmod on input line 905.
LaTeX Info: Redefining \pmod on input line 910.
LaTeX Info: Redefining \smash on input line 940.
LaTeX Info: Redefining \relbar on input line 970.
LaTeX Info: Redefining \Relbar on input line 971.
\c@MaxMatrixCols=\count199
\dotsspace@=\muskip16
\c@parentequation=\count266
\dspbrk@lvl=\count267
\tag@help=\toks17
\row@=\count268
\column@=\count269
\maxfields@=\count270
\andhelp@=\toks18
\eqnshift@=\dimen144
\alignsep@=\dimen145
\tagshift@=\dimen146
\tagwidth@=\dimen147
\totwidth@=\dimen148
\lineht@=\dimen149
\@envbody=\toks19
\multlinegap=\skip51
\multlinetaggap=\skip52
\mathdisplay@stack=\toks20
LaTeX Info: Redefining \[ on input line 2953.
LaTeX Info: Redefining \] on input line 2954.
) (c:/texlive/2022/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2021/09/16 v1.2d Enhanced LaTeX Graphics (DPC,SPQR)
 (c:/texlive/2022/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2022/05/29 v1.15 key=value parser (DPC)
\KV@toks@=\toks21
) (c:/texlive/2022/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2022/03/10 v1.4e Standard LaTeX Graphics (DPC,SPQR)
 (c:/texlive/2022/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2021/08/11 v1.11 sin cos tan (DPC)
) (c:/texlive/2022/texmf-dist/tex/latex/graphics-cfg/graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: pdftex.def on input line 107.
 (c:/texlive/2022/texmf-dist/tex/latex/graphics-def/pdftex.def
File: pdftex.def 2022/09/22 v1.2b Graphics/color driver for pdftex
))
\Gin@req@height=\dimen150
\Gin@req@width=\dimen151
) (c:/texlive/2022/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def
File: l3backend-pdftex.def 2023-01-16 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count271
\l__pdf_internal_box=\box53
)
No file C1.aux.
\openout1 = `C1.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 16.
LaTeX Font Info:    ... okay on input line 16.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 16.
LaTeX Font Info:    ... okay on input line 16.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 16.
LaTeX Font Info:    ... okay on input line 16.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 16.
LaTeX Font Info:    ... okay on input line 16.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 16.
LaTeX Font Info:    ... okay on input line 16.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 16.
LaTeX Font Info:    ... okay on input line 16.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 16.
LaTeX Font Info:    ... okay on input line 16.
(c:/texlive/2022/texmf-dist/tex/context/base/mkii/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count272
\scratchdimen=\dimen152
\scratchbox=\box54
\nofMPsegments=\count273
\nofMParguments=\count274
\everyMPshowfont=\toks22
\MPscratchCnt=\count275
\MPscratchDim=\dimen153
\MPnumerator=\count276
\makeMPintoPDFobject=\count277
\everyMPtoPDFconversion=\toks23
) (c:/texlive/2022/texmf-dist/tex/latex/epstopdf-pkg/epstopdf-base.sty
Package: epstopdf-base 2020-01-24 v2.11 Base part for package epstopdf
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 485.
 (c:/texlive/2022/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Live
))

c:/Users/user/Desktop/eBook/source/C1.tex:21: LaTeX Error: \begin{minipage} on input line 9 ended by \end{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.21 \end{document}
                   
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

(./C1.aux)
c:/Users/user/Desktop/eBook/source/C1.tex:21: You can't use `\end' in internal vertical mode.
\enddocument ...cument/end}\deadcycles \z@ \@@end 
                                                  
l.21 \end{document}
                   
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


c:/Users/user/Desktop/eBook/source/C1.tex:21: LaTeX Error: \begin{minipage} on input line 9 ended by \end{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.21 \end{document}
                   
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


c:/Users/user/Desktop/eBook/source/C1.tex:22: LaTeX Error: \begin{minipage} on input line 9 ended by \end{lstlisting}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.22 \end{lstlisting}
                     
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

c:/Users/user/Desktop/eBook/source/C1.tex:23: Missing } inserted.
<inserted text> 
                }
l.23 \end{minipage}
                   
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

c:/Users/user/Desktop/eBook/source/C1.tex:23: Undefined control sequence.
\endminipage ...\expandafter \@iiiparbox \@mpargs 
                                                  {\unvbox \@tempboxa }
l.23 \end{minipage}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Undefined control sequence.
<argument> ...ze \@tempdima \@parboxrestore \enum 
                                                  \@@par 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

Runaway argument?
{\@checkend {minipage}\expandafter \endgroup \if@endpe \@doendpe \fi \ETC.
c:/Users/user/Desktop/eBook/source/C1.tex:32: Paragraph ended before \setlength was complete.
<to be read again> 
                   \par 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Undefined control sequence.
<argument> ...tabular} \par \par \par \subsection 
                                                  {\hll {Form for simplest c...
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Undefined control sequence.
<argument> ...r} \par \par \par \subsection {\hll 
                                                  {Form for simplest calcula...
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

Missing character: There is no F in font nullfont!
Missing character: There is no o in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no m in font nullfont!
Missing character: There is no f in font nullfont!
Missing character: There is no o in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no m in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no c in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no c in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no o in font nullfont!
Missing character: There is no n in font nullfont!
c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing } inserted.
<inserted text> 
                }
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing $ inserted.
<inserted text> 
                $
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing } inserted.
<inserted text> 
                }
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Extra alignment tab has been changed to \cr.
<recently read> \endtemplate 
                             
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You have given more \span or & marks than there were
in the preamble to the \halign or \valign now in progress.
So I'll assume that you meant to type \cr instead.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Illegal parameter number in definition of \@preamble.
<to be read again> 
                   \unskip 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing } inserted.
<inserted text> 
                }
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I'm guessing that you meant to end an alignment here.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Misplaced \cr.
<inserted text> \cr 
                    
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

c:/Users/user/Desktop/eBook/source/C1.tex:32: Missing \cr inserted.
<inserted text> 
                \cr 
l.32 \enum
          { \newcommand{\sss}[1]{this.getField("#1").value}
(That makes 100 errors; please try again.) 
Here is how much of TeX's memory you used:
 1993 strings out of 476024
 30604 string characters out of 5794016
 1850382 words of memory out of 5000000
 22477 multiletter control sequences out of 15000+600000
 512455 words of font info for 33 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 57i,12n,62p,250b,2589s stack positions out of 10000i,1000n,20000p,200000b,200000s

c:/Users/user/Desktop/eBook/source/C1.tex:32:  ==> Fatal error occurred, no output PDF file produced!
